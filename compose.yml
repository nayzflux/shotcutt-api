version: "3"

volumes:
  db-data:
  api-data:

networks:
  private:
  webgateway:
    external: true
    name: webgateway

services:
  # API
  api:
    image: shotcutt-api:latest
    hostname: api
    expose:
      - 5000/tcp
    # ports:
    #   - 5000:5000
    env_file: .env
    volumes:
      - api-data:/app/uploads
    depends_on:
      - db
      - processing
    restart: on-failure
    networks:
      - webgateway
      - private
    labels:
      - traefik.enable=true
      - traefik.http.routers.shotcutt-api.rule=Host(`api.shotcutt.nayz.fr`)
      - traefik.http.routers.shotcutt-api.entrypoints=websecure
      - traefik.http.routers.shotcutt-api.service=shotcutt-api
      - traefik.http.services.shotcutt-api.loadbalancer.server.port=5000
      - traefik.http.routers.shotcutt-api.tls.certresolver=production

  # Service de traitement
  processing:
    image: shotcutt-processing:latest
    hostname: process
    expose:
      - 8000/tcp
    # ports:
    #   - 8000:8000
    env_file: .env
    restart: on-failure
    networks:
      - private

  # Database
  db:
    image: postgres:latest
    hostname: pg
    expose:
      - 5432/tcp
    # ports:
    #   - 5432:5432
    env_file: .env
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: on-failure
    networks:
      - private
